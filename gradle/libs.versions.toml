[versions]
calcite = "1.39.0"

blaze-persistence = "1.6.11"

azure-core = "1.49.1"
azure-identity = "1.11.0"
azure-resourcemanager = "2.44.0"
azure-resourcemanager-postgresqlflexibleserver = "1.1.0"

gitlab4j = "6.0.0"

github-api = "1.323"

aws = "2.26.21"

microsoft-graph-beta = "6.13.0"
microsoft-graph-core = "3.1.14"

google-workspace = "2.0.0"
google-oauth = "1.19.0"
google-workspace-directory = "directory_v1-rev20220919-2.0.0"
google-workspace-drive = "v3-rev20220815-2.0.0"
gcp = "26.50.0"

org-openapitools-jackson-databind-nullable = "0.2.6"
jersey = "3.1.1"
com-github-scribejava-scribejava-apis = "8.3.3"
com-google-code-findbugs-jsr305 = "3.0.2"

jackson = "2.14.1"

jakarta-annotation-api = "2.1.1"
jakarta-persistence-api = "3.0.0"

junit-jupiter = "5.11.3"
assertj = "3.26.3"
h2 = "2.2.224"
hibernate = "6.5.2.Final"

[libraries]
calcite-core = { module = "org.apache.calcite:calcite-core", version.ref = "calcite" }

blaze-persistence-core-api = { module = "com.blazebit:blaze-persistence-core-api-jakarta", version.ref = "blaze-persistence" }
blaze-persistence-core-impl = { module = "com.blazebit:blaze-persistence-core-impl-jakarta", version.ref = "blaze-persistence" }
blaze-persistence-entity-view-api = { module = "com.blazebit:blaze-persistence-entity-view-api-jakarta", version.ref = "blaze-persistence" }
blaze-persistence-entity-view-impl = { module = "com.blazebit:blaze-persistence-entity-view-impl-jakarta", version.ref = "blaze-persistence" }
blaze-persistence-integration-hibernate6 = { module = "com.blazebit:blaze-persistence-integration-hibernate-6.2", version.ref = "blaze-persistence" }

azure-core = { module = "com.azure:azure-core", version.ref = "azure-core" }
azure-identity = { module = "com.azure:azure-identity", version.ref = "azure-identity" }
azure-resourcemanager = { module = "com.azure.resourcemanager:azure-resourcemanager", version.ref = "azure-resourcemanager" }
azure-resourcemanager-postgresqlflexibleserver = { module = "com.azure.resourcemanager:azure-resourcemanager-postgresqlflexibleserver", version.ref = "azure-resourcemanager-postgresqlflexibleserver" }

gitlab4j-api = { module = "org.gitlab4j:gitlab4j-api", version.ref = "gitlab4j" }

github-api = { module = "org.kohsuke:github-api", version.ref = "github-api" }

awssdk-ec2 = { module = "software.amazon.awssdk:ec2", version.ref = "aws" }
awssdk-ecr = { module = "software.amazon.awssdk:ecr", version.ref = "aws" }
awssdk-ecs = { module = "software.amazon.awssdk:ecs", version.ref = "aws" }
awssdk-efs = { module = "software.amazon.awssdk:efs", version.ref = "aws" }
awssdk-elasticloadbalancingv2 = { module = "software.amazon.awssdk:elasticloadbalancingv2", version.ref = "aws" }
awssdk-iam = { module = "software.amazon.awssdk:iam", version.ref = "aws" }
awssdk-lambda = { module = "software.amazon.awssdk:lambda", version.ref = "aws" }
awssdk-rds = { module = "software.amazon.awssdk:rds", version.ref = "aws" }
awssdk-route53 = { module = "software.amazon.awssdk:route53", version.ref = "aws" }
awssdk-s3 = { module = "software.amazon.awssdk:s3", version.ref = "aws" }
awssdk-kms = { module = "software.amazon.awssdk:kms", version.ref = "aws" }

microsoft-graph-beta = { module = "com.microsoft.graph:microsoft-graph-beta", version.ref = "microsoft-graph-beta" }
microsoft-graph-core = { module = "com.microsoft.graph:microsoft-graph-core", version.ref = "microsoft-graph-core" }

google-workspace-api = { module = "com.google.api-client:google-api-client", version.ref = "google-workspace" }
google-oauth = { module = "com.google.auth:google-auth-library-oauth2-http", version.ref = "google-oauth" }
google-workspace-directory = { module = "com.google.apis:google-api-services-admin-directory", version.ref = "google-workspace-directory" }
google-workspace-drive = { module = "com.google.apis:google-api-services-drive", version.ref = "google-workspace-drive" }

gcp-bom = { module = "com.google.cloud:libraries-bom", version.ref = "gcp" }
gcp-compute = { module = "com.google.cloud:google-cloud-compute" }
gcp-iam-policy = { module = "com.google.cloud:google-iam-policy" }
gcp-iam-admin = { module = "com.google.cloud:google-iam-admin" }
gcp-resourcemanager = { module = "com.google.cloud:google-cloud-resourcemanager" }
gcp-asset = { module = "com.google.cloud:google-cloud-asset" }
gcp-storage = { module = "com.google.cloud:google-cloud-storage" }

org-openapitools-jackson-databind-nullable = { module = "org.openapitools:jackson-databind-nullable", version.ref = "org-openapitools-jackson-databind-nullable" }

jersey-connectors-jersey-apache-connector = { module = "org.glassfish.jersey.connectors:jersey-apache-connector", version.ref = "jersey" }
jersey-core-jersey-client = { module = "org.glassfish.jersey.core:jersey-client", version.ref = "jersey" }
jersey-inject-jersey-hk2 = { module = "org.glassfish.jersey.inject:jersey-hk2", version.ref = "jersey" }
jersey-media-jersey-media-json-jackson = { module = "org.glassfish.jersey.media:jersey-media-json-jackson", version.ref = "jersey" }
jersey-media-jersey-media-multipart = { module = "org.glassfish.jersey.media:jersey-media-multipart", version.ref = "jersey" }

com-github-scribejava-scribejava-apis = { module = "com.github.scribejava:scribejava-apis", version.ref = "com-github-scribejava-scribejava-apis" }
com-google-code-findbugs-jsr305 = { module = "com.google.code.findbugs:jsr305", version.ref = "com-google-code-findbugs-jsr305" }

jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "jackson" }
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }

jakarta-annotation-api = { module = "jakarta.annotation:jakarta.annotation-api", version.ref = "jakarta-annotation-api" }
jakarta-persistence-api = { module = "jakarta.persistence:jakarta.persistence-api", version.ref = "jakarta-persistence-api" }

junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit-jupiter" }
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj" }
h2 = { module = "com.h2database:h2", version.ref = "h2" }
hibernate-core = { module = "org.hibernate.orm:hibernate-core", version.ref = "hibernate" }
